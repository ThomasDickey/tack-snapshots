# $Id: Makefile.in,v 1.3 1997/12/27 17:52:36 tom Exp $
# Makefile for tack
#
# The variable 'srcdir' refers to the source-distribution, and can be set with
# the configure script by "--srcdir=DIR".
#
# The rules are organized to produce the libraries for the configured models,
# and the programs with the configured default model.

# turn off _all_ suffix rules; we'll generate our own
.SUFFIXES:

SHELL		= /bin/sh
THIS		= Makefile

CF_MFLAGS 	= @cf_cv_makeflags@
@SET_MAKE@

MODEL		= ../@DFT_OBJ_SUBDIR@
INSTALL_PREFIX	= @INSTALL_PREFIX@
srcdir		= @srcdir@
prefix		= @prefix@
exec_prefix	= @exec_prefix@
bindir		= @bindir@
libdir		= @libdir@
includedir	= @includedir@
datadir		= @datadir@

ticdir		= $(datadir)/terminfo

INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@

AWK		= @AWK@
LN_S		= @LN_S@

CC		= @CC@
CFLAGS		= @CFLAGS@

INCDIR		= $(srcdir)/../include
CPPFLAGS	= -DHAVE_CONFIG_H -I../tack -I$(srcdir) @CPPFLAGS@

CCFLAGS		= $(CPPFLAGS) $(CFLAGS)

CFLAGS_NORMAL	= $(CCFLAGS)
CFLAGS_DEBUG	= $(CCFLAGS) @CC_G_OPT@ -DTRACE
CFLAGS_PROFILE	= $(CCFLAGS) -pg
CFLAGS_SHARED	= $(CCFLAGS) @CC_SHARED_OPTS@

CFLAGS_DEFAULT	= $(CFLAGS_@DFT_UPR_MODEL@)

LD		= @LD@
LINK		= $(CC)
LDFLAGS		= -L../lib -lncurses@DFT_ARG_SUFFIX@ @LDFLAGS@ @LD_MODEL@ @LIBS@ @EXTRA_LIBS@

LDFLAGS_NORMAL	= $(LDFLAGS)
LDFLAGS_DEBUG	= $(LDFLAGS) @CC_G_OPT@
LDFLAGS_PROFILE	= $(LDFLAGS) -pg
LDFLAGS_SHARED	= $(LDFLAGS) @CC_SHARED_OPTS@ @LD_SHARED_OPTS@

LDFLAGS_DEFAULT	= $(LDFLAGS_@DFT_UPR_MODEL@)

LINT		= @LINT@
LINT_OPTS	= @LINT_OPTS@
LINT_LIBS	= -lncurses @LIBS@

PROGS = tack

# Default library, for linking applications
DEPS_CURSES = ../lib/libncurses@DFT_DEP_SUFFIX@

################################################################################
all:	$(PROGS) 

install: install.tack 
uninstall: uninstall.tack 

# this line simplifies the configure-script
install.libs:
uninstall.libs:

install.tack: $(PROGS) $(INSTALL_PREFIX)$(bindir)
	$(INSTALL_PROGRAM) tack    $(INSTALL_PREFIX)$(bindir)/tack

uninstall.tack:
	-@rm -f $(INSTALL_PREFIX)$(bindir)/tack

$(INSTALL_PREFIX)$(bindir) :
	$(srcdir)/../mkinstalldirs $@

#
# Rules for building tack
#

DEPS_TACK = \
	$(MODEL)/ansi.o \
	$(MODEL)/charset.o \
	$(MODEL)/color.o \
	$(MODEL)/control.o \
	$(MODEL)/crum.o \
	$(MODEL)/edit.o \
	$(MODEL)/fun.o \
	$(MODEL)/init.o \
	$(MODEL)/menu.o \
	$(MODEL)/modes.o \
	$(MODEL)/output.o \
	$(MODEL)/pad.o \
	$(MODEL)/scan.o \
	$(MODEL)/sync.o \
	$(MODEL)/sysdep.o \
	$(MODEL)/tack.o

tack: $(DEPS_TACK) $(DEPS_CURSES)
	@ECHO_LINK@ $(LINK) $(DEPS_TACK) $(LDFLAGS_DEFAULT) -o $@

#
# Utility productions start here
#

tags:
	ctags *.[ch]

TAGS:
	etags *.[ch]

clean ::
	-rm -f tags TAGS do.tic *~
	-rm -f $(PROGS)

distclean :: clean
	-rm -f Makefile

mostlyclean :: clean

realclean :: distclean

tack.tar: Makefile.in Makefile modules *.[ch] tack.1 HISTORY
	tar -cvf tack.tar Makefile.in Makefile modules *.[ch] tack.1 HISTORY

# These rules are used to allow "make -n" to work on a clean directory-tree
../include/hashsize.h \
../include/parametrized.h \
../include/term.h :
	cd ../include; $(MAKE) $(CF_MFLAGS)

$(DEPS_CURSES) :
	cd ../ncurses; $(MAKE) $(CF_MFLAGS)

lint:
	$(LINT) $(LINT_OPTS) $(CPPFLAGS) $(srcdir)/clear.c                          $(LINT_LIBS)

###############################################################################
# The remainder of this file is automatically generated during configuration
###############################################################################
